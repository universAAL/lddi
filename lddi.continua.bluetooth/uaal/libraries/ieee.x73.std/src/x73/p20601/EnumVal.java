/*
    Copyright 2007-2014 TSB, http://www.tsbtecnologias.es
    Technologies for Health and Well-being - Valencia, Spain

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 */
package x73.p20601;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "EnumVal" )
    public class EnumVal implements IASN1PreparedElement {
            
        @ASN1Element ( name = "enum-obj-id", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private OID_Type enum_obj_id = null;
                
  @ASN1OctetString( name = "" )
    
        @ASN1Element ( name = "enum-text-string", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private byte[] enum_text_string = null;
                
  
        @ASN1Element ( name = "enum-bit-str", isOptional =  false , hasTag =  true, tag = 16 , hasDefaultValue =  false  )
    
	private BITS_32 enum_bit_str = null;
                
  
        
        public OID_Type getEnum_obj_id () {
            return this.enum_obj_id;
        }

        public boolean isEnum_obj_idSelected () {
            return this.enum_obj_id != null;
        }

        private void setEnum_obj_id (OID_Type value) {
            this.enum_obj_id = value;
        }

        
        public void selectEnum_obj_id (OID_Type value) {
            this.enum_obj_id = value;
            
                    setEnum_text_string(null);
                
                    setEnum_bit_str(null);
                            
        }

        
  
        
        public byte[] getEnum_text_string () {
            return this.enum_text_string;
        }

        public boolean isEnum_text_stringSelected () {
            return this.enum_text_string != null;
        }

        private void setEnum_text_string (byte[] value) {
            this.enum_text_string = value;
        }

        
        public void selectEnum_text_string (byte[] value) {
            this.enum_text_string = value;
            
                    setEnum_obj_id(null);
                
                    setEnum_bit_str(null);
                            
        }

        
  
        
        public BITS_32 getEnum_bit_str () {
            return this.enum_bit_str;
        }

        public boolean isEnum_bit_strSelected () {
            return this.enum_bit_str != null;
        }

        private void setEnum_bit_str (BITS_32 value) {
            this.enum_bit_str = value;
        }

        
        public void selectEnum_bit_str (BITS_32 value) {
            this.enum_bit_str = value;
            
                    setEnum_obj_id(null);
                
                    setEnum_text_string(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(EnumVal.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            