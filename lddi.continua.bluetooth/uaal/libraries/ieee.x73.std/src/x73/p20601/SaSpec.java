
package x73.p20601;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "SaSpec", isSet = false )
    public class SaSpec implements IASN1PreparedElement {
            
        @ASN1Element ( name = "array-size", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private INT_U16 array_size = null;
                
  
        @ASN1Element ( name = "sample-type", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SampleType sample_type = null;
                
  
        @ASN1Element ( name = "flags", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private SaFlags flags = null;
                
  
        
        public INT_U16 getArray_size () {
            return this.array_size;
        }

        

        public void setArray_size (INT_U16 value) {
            this.array_size = value;
        }
        
  
        
        public SampleType getSample_type () {
            return this.sample_type;
        }

        

        public void setSample_type (SampleType value) {
            this.sample_type = value;
        }
        
  
        
        public SaFlags getFlags () {
            return this.flags;
        }

        

        public void setFlags (SaFlags value) {
            this.flags = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SaSpec.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            