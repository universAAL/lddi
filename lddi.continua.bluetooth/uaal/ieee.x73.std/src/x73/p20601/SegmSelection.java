/*
    Copyright 2007-2014 TSB, http://www.tsbtecnologias.es
    Technologies for Health and Well-being - Valencia, Spain

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
 */
package x73.p20601;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Choice ( name = "SegmSelection" )
    public class SegmSelection implements IASN1PreparedElement {
            
        @ASN1Element ( name = "all-segments", isOptional =  false , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private INT_U16 all_segments = null;
                
  
        @ASN1Element ( name = "segm-id-list", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private SegmIdList segm_id_list = null;
                
  
        @ASN1Element ( name = "abs-time-range", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private AbsTimeRange abs_time_range = null;
                
  
        
        public INT_U16 getAll_segments () {
            return this.all_segments;
        }

        public boolean isAll_segmentsSelected () {
            return this.all_segments != null;
        }

        private void setAll_segments (INT_U16 value) {
            this.all_segments = value;
        }

        
        public void selectAll_segments (INT_U16 value) {
            this.all_segments = value;
            
                    setSegm_id_list(null);
                
                    setAbs_time_range(null);
                            
        }

        
  
        
        public SegmIdList getSegm_id_list () {
            return this.segm_id_list;
        }

        public boolean isSegm_id_listSelected () {
            return this.segm_id_list != null;
        }

        private void setSegm_id_list (SegmIdList value) {
            this.segm_id_list = value;
        }

        
        public void selectSegm_id_list (SegmIdList value) {
            this.segm_id_list = value;
            
                    setAll_segments(null);
                
                    setAbs_time_range(null);
                            
        }

        
  
        
        public AbsTimeRange getAbs_time_range () {
            return this.abs_time_range;
        }

        public boolean isAbs_time_rangeSelected () {
            return this.abs_time_range != null;
        }

        private void setAbs_time_range (AbsTimeRange value) {
            this.abs_time_range = value;
        }

        
        public void selectAbs_time_range (AbsTimeRange value) {
            this.abs_time_range = value;
            
                    setAll_segments(null);
                
                    setSegm_id_list(null);
                            
        }

        
  

	    public void initWithDefaults() {
	    }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(SegmSelection.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }


    }
            