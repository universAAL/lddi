
package x73.p20601;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "DataResponse", isSet = false )
    public class DataResponse implements IASN1PreparedElement {
            
        @ASN1Element ( name = "rel-time-stamp", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private RelativeTime rel_time_stamp = null;
                
  
        @ASN1Element ( name = "data-req-result", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private DataReqResult data_req_result = null;
                
  
        @ASN1Element ( name = "event-type", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private OID_Type event_type = null;
                
  @ASN1Any( name = "" )
    
        @ASN1Element ( name = "event-info", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private byte[] event_info = null;
                
  
        
        public RelativeTime getRel_time_stamp () {
            return this.rel_time_stamp;
        }

        

        public void setRel_time_stamp (RelativeTime value) {
            this.rel_time_stamp = value;
        }
        
  
        
        public DataReqResult getData_req_result () {
            return this.data_req_result;
        }

        

        public void setData_req_result (DataReqResult value) {
            this.data_req_result = value;
        }
        
  
        
        public OID_Type getEvent_type () {
            return this.event_type;
        }

        

        public void setEvent_type (OID_Type value) {
            this.event_type = value;
        }
        
  
        
        public byte[] getEvent_info () {
            return this.event_info;
        }

        

        public void setEvent_info (byte[] value) {
            this.event_info = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(DataResponse.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            