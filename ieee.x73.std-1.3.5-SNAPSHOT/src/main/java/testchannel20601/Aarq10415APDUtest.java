package testchannel20601;

public class Aarq10415APDUtest {

	byte[] apdu;
	
	public Aarq10415APDUtest(){
		
		apdu = new byte[]{
				(byte)0xE2, (byte)0x00, 						//choice APDU
				(byte)0x00, (byte)0x32, 						//length
				(byte)0x80, (byte)0x00, (byte)0x00, (byte)0x00, // association version
				(byte)0x00, (byte)0x01, (byte)0x00, (byte)0x2A, // data protocol list = 1, length 42
				(byte)0x50, (byte)0x79,  						// data protocol id 20601
				(byte)0x00, (byte)0x26,							// data proto info length
				(byte)0x80, (byte)0x00, (byte)0x00, (byte)0x00, // protocol version
				(byte)0x80, (byte)0x00, 						// encoding rules (MDER)
				(byte)0x80, (byte)0x00, (byte)0x00, (byte)0x00,	// nomenclature version
				(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, // functional units
				(byte)0x00, (byte)0x80, (byte)0x00, (byte)0x00, // sysType (agent)
				(byte)0x00, (byte)0x08, 						// sys-id length (8)
				(byte)0x11, (byte)0x22, (byte)0x33, (byte)0x44, // sys-id
				(byte)0x55, (byte)0x66, (byte)0x77, (byte)0x88,
				(byte)0x05, (byte)0xDC, 						 //dev config id (standard 700 -> blood pressure)
				(byte)0x00, (byte)0x81,							 //data request mode flags 
				(byte)0x01, (byte)0x00, 						// data-req-agent-count | data-req-manager-count
				(byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, // option list.count | option list length
				};
	}
	
	/*
	 * ============================================================================================
Data received from agent: 
0xE2 0x00
0x00 0x32
0x80 0x00
0x00 0x00
0x00 0x01
0x00 0x2A
0x50 0x79
0x00 0x26
0x80 0x00
0x00 0x00
0x80 0x00
0x80 0x00
0x00 0x00
0x00 0x00
0x00 0x00
0x00 0x80
0x00 0x00
0x00 0x08
0x00 0x09
0x1F 0xFF
0xFE 0x80
0x0A 0xE0
0x05 0xDC
0x00 0x81
0x01 0x00
0x00 0x00
0x00 0x00
============================================================================================

	 */
	
	public byte getByte(int i ){
		return apdu[i]; 
	}
	
	public byte[] getByteArray(){
		return apdu;
	}
	
	
}
