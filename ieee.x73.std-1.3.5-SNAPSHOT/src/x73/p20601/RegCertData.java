
package x73.p20601;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "RegCertData", isSet = false )
    public class RegCertData implements IASN1PreparedElement {
            
        @ASN1Element ( name = "auth-body-and-struc-type", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private AuthBodyAndStrucType auth_body_and_struc_type = null;
                
  @ASN1Any( name = "" )
    
        @ASN1Element ( name = "auth-body-data", isOptional =  false , hasTag =  false  , hasDefaultValue =  false  )
    
	private byte[] auth_body_data = null;
                
  
        
        public AuthBodyAndStrucType getAuth_body_and_struc_type () {
            return this.auth_body_and_struc_type;
        }

        

        public void setAuth_body_and_struc_type (AuthBodyAndStrucType value) {
            this.auth_body_and_struc_type = value;
        }
        
  
        
        public byte[] getAuth_body_data () {
            return this.auth_body_data;
        }

        

        public void setAuth_body_data (byte[] value) {
            this.auth_body_data = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(RegCertData.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            